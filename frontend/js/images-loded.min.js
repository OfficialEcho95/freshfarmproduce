/*!
 * imagesLoaded PACKAGED v4.1.3
 * JavaScript is all like "You images are done yet or what?"
 * MIT License
 */

!(function (e, t) { typeof define === 'function' && define.amd ? define('ev-emitter/ev-emitter', t) : typeof module === 'object' && module.exports ? module.exports = t() : e.EvEmitter = t(); }(typeof window !== 'undefined' ? window : this, () => { function e() {} const t = e.prototype; return t.on = function (e, t) { if (e && t) { const i = this._events = this._events || {}; const n = i[e] = i[e] || []; return n.indexOf(t) == -1 && n.push(t), this; } }, t.once = function (e, t) { if (e && t) { this.on(e, t); const i = this._onceEvents = this._onceEvents || {}; const n = i[e] = i[e] || {}; return n[t] = !0, this; } }, t.off = function (e, t) { const i = this._events && this._events[e]; if (i && i.length) { const n = i.indexOf(t); return n != -1 && i.splice(n, 1), this; } }, t.emitEvent = function (e, t) { const i = this._events && this._events[e]; if (i && i.length) { let n = 0; let o = i[n]; t = t || []; for (let r = this._onceEvents && this._onceEvents[e]; o;) { const s = r && r[o]; s && (this.off(e, o), delete r[o]), o.apply(this, t), n += s ? 0 : 1, o = i[n]; } return this; } }, t.allOff = t.removeAllListeners = function () { delete this._events, delete this._onceEvents; }, e; })), (function (e, t) {
  typeof define === 'function' && define.amd ? define(['ev-emitter/ev-emitter'], (i) => t(e, i)) : typeof module === 'object' && module.exports ? module.exports = t(e, require('ev-emitter')) : e.imagesLoaded = t(e, e.EvEmitter);
}(typeof window !== 'undefined' ? window : this, (e, t) => { function i(e, t) { for (const i in t)e[i] = t[i]; return e; } function n(e) { let t = []; if (Array.isArray(e))t = e; else if (typeof e.length === 'number') for (let i = 0; i < e.length; i++)t.push(e[i]); else t.push(e); return t; } function o(e, t, r) { return this instanceof o ? (typeof e === 'string' && (e = document.querySelectorAll(e)), this.elements = n(e), this.options = i({}, this.options), typeof t === 'function' ? r = t : i(this.options, t), r && this.on('always', r), this.getImages(), h && (this.jqDeferred = new h.Deferred()), void setTimeout(() => { this.check(); })) : new o(e, t, r); } function r(e) { this.img = e; } function s(e, t) { this.url = e, this.element = t, this.img = new Image(); } var h = e.jQuery; const a = e.console; o.prototype = Object.create(t.prototype), o.prototype.options = {}, o.prototype.getImages = function () { this.images = [], this.elements.forEach(this.addElementImages, this); }, o.prototype.addElementImages = function (e) { e.nodeName == 'IMG' && this.addImage(e), this.options.background === !0 && this.addElementBackgroundImages(e); const t = e.nodeType; if (t && d[t]) { for (var i = e.querySelectorAll('img'), n = 0; n < i.length; n++) { const o = i[n]; this.addImage(o); } if (typeof this.options.background === 'string') { const r = e.querySelectorAll(this.options.background); for (n = 0; n < r.length; n++) { const s = r[n]; this.addElementBackgroundImages(s); } } } }; var d = { 1: !0, 9: !0, 11: !0 }; return o.prototype.addElementBackgroundImages = function (e) { const t = getComputedStyle(e); if (t) for (let i = /url\((['"])?(.*?)\1\)/gi, n = i.exec(t.backgroundImage); n !== null;) { const o = n && n[2]; o && this.addBackground(o, e), n = i.exec(t.backgroundImage); } }, o.prototype.addImage = function (e) { const t = new r(e); this.images.push(t); }, o.prototype.addBackground = function (e, t) { const i = new s(e, t); this.images.push(i); }, o.prototype.check = function () { function e(e, i, n) { setTimeout(() => { t.progress(e, i, n); }); } var t = this; return this.progressedCount = 0, this.hasAnyBroken = !1, this.images.length ? void this.images.forEach((t) => { t.once('progress', e), t.check(); }) : void this.complete(); }, o.prototype.progress = function (e, t, i) { this.progressedCount++, this.hasAnyBroken = this.hasAnyBroken || !e.isLoaded, this.emitEvent('progress', [this, e, t]), this.jqDeferred && this.jqDeferred.notify && this.jqDeferred.notify(this, e), this.progressedCount == this.images.length && this.complete(), this.options.debug && a && a.log(`progress: ${i}`, e, t); }, o.prototype.complete = function () { const e = this.hasAnyBroken ? 'fail' : 'done'; if (this.isComplete = !0, this.emitEvent(e, [this]), this.emitEvent('always', [this]), this.jqDeferred) { const t = this.hasAnyBroken ? 'reject' : 'resolve'; this.jqDeferred[t](this); } }, r.prototype = Object.create(t.prototype), r.prototype.check = function () { const e = this.getIsImageComplete(); return e ? void this.confirm(this.img.naturalWidth !== 0, 'naturalWidth') : (this.proxyImage = new Image(), this.proxyImage.addEventListener('load', this), this.proxyImage.addEventListener('error', this), this.img.addEventListener('load', this), this.img.addEventListener('error', this), void (this.proxyImage.src = this.img.src)); }, r.prototype.getIsImageComplete = function () { return this.img.complete && void 0 !== this.img.naturalWidth; }, r.prototype.confirm = function (e, t) { this.isLoaded = e, this.emitEvent('progress', [this, this.img, t]); }, r.prototype.handleEvent = function (e) { const t = `on${e.type}`; this[t] && this[t](e); }, r.prototype.onload = function () { this.confirm(!0, 'onload'), this.unbindEvents(); }, r.prototype.onerror = function () { this.confirm(!1, 'onerror'), this.unbindEvents(); }, r.prototype.unbindEvents = function () { this.proxyImage.removeEventListener('load', this), this.proxyImage.removeEventListener('error', this), this.img.removeEventListener('load', this), this.img.removeEventListener('error', this); }, s.prototype = Object.create(r.prototype), s.prototype.check = function () { this.img.addEventListener('load', this), this.img.addEventListener('error', this), this.img.src = this.url; const e = this.getIsImageComplete(); e && (this.confirm(this.img.naturalWidth !== 0, 'naturalWidth'), this.unbindEvents()); }, s.prototype.unbindEvents = function () { this.img.removeEventListener('load', this), this.img.removeEventListener('error', this); }, s.prototype.confirm = function (e, t) { this.isLoaded = e, this.emitEvent('progress', [this, this.element, t]); }, o.makeJQueryPlugin = function (t) { t = t || e.jQuery, t && (h = t, h.fn.imagesLoaded = function (e, t) { const i = new o(this, e, t); return i.jqDeferred.promise(h(this)); }); }, o.makeJQueryPlugin(), o; }));
